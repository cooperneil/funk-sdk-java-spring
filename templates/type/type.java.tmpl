package {{.PathDots}};

import com.fasterxml.jackson.databind.PropertyNamingStrategy;
import com.fasterxml.jackson.databind.annotation.JsonNaming;

import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ReflectionToStringBuilder;
import org.apache.commons.lang3.builder.ToStringStyle;

/**
 * Generated type binding for CloudEvent type
 * {{.CEType}}
 *
 * Powered by fun(k)
 */
 @JsonNaming(PropertyNamingStrategy.SnakeCaseStrategy.class)
public class {{.UpCaseTypeName}} {
  {{range .StructFields}}public {{if eq .FieldType "integer"}} int {{else if eq .FieldType "string"}} String {{else}} {{.FieldType}} {{end}} {{.Name}};
  {{end}}

  {{range .StructFields}}public {{if eq .FieldType "integer"}} int {{else if eq .FieldType "string"}} String {{else}} {{.FieldType}} {{end}} get{{.Name}}() {return {{.Name}};}
  {{end}}

  {{range .StructFields}}public void set{{.Name}}({{if eq .FieldType "integer"}}int {{else if eq .FieldType "string"}}String {{else}}{{.FieldType}} {{end}} {{.Name}}) {this.{{.Name}} = {{.Name}};}
  {{end}}

  @Override
  public boolean equals(Object obj) {
    return EqualsBuilder.reflectionEquals(this, obj);
  }

  @Override
  public int hashCode() {
    return HashCodeBuilder.reflectionHashCode(this);
  }

  @Override
  public String toString() {
    return ReflectionToStringBuilder.toString(this, ToStringStyle.MULTI_LINE_STYLE);
  }
}